source('/Volumes/APPLE HDD/git/R_Function/photo_filter.R')
rm(list = ls())
setwd('~/Code/R/COIN/')
source('~/rhead')
cat('~/rhead')
source('~/Code/R/COIN/load_bitstampUSD.R')
install.packages('scales');install.packages('ggplot2');install.packages('reshape2');install.packages('plyr')
source('~/Code/R/COIN/load_bitstampUSD.R')
source('~/Code/R/COIN/gen_reward.R')
source('~/Code/R/COIN/gen_reward.R')
rm(list = ls());setwd('~/Code/R/COIN/');source('~/rhead')
file.path(dir_data,'bitstampUSD.Rda')
load(file.path(dir_data,'bitstampUSD.Rda'))
summary(DT$time)
seq_days <- seq.POSIXt(dayS,dayE,by = 'days')
dayS <- as.p('2011-10-01')
dayE <- as.p('2017-04-29')
seq_days <- seq.POSIXt(dayS,dayE,by = 'days')
?rnorm
runif(10)
actions <- data.frame(time = seq_days,
act = round(runif(length(seq_days,-1,1)),digits = 2))
actions <- data.frame(time = seq_days,
act = round(runif(length(seq_days),-1,1)),digits = 2)
View(actions)
runif(5,-1,1)
actions <- data.frame(time = seq_days,
act = round(runif(length(seq_days),-1,1),digits = 2))
View(actions)
mtd <- 'mean'
f <- get(mtd)
DT$date <- as.Date(DT$time)
f <- get(mtd)
v <- tapply(DT$price,DT$date,f)
names(v)
v <- melt(tapply(DT$price,DT$date,f))
names(v) <- c('date','value')
View(v)
v$value <- round(v$value,digits = 4)
get_diurnal_value <- function(DT,mtd = 'mean'){
f <- get(mtd)
v <- melt(tapply(DT$price,DT$date,f))
names(v) <- c('date','value')
v$value <- round(v$value,digits = 4)
return(v)
}
DV <- get_diurnal_value(DT,'mean')
View(DV)
DP <- DV
dayS <- as.Date('2011-10-01')
dayE <- as.Date('2017-04-29')
seq_days <- seq.Date(dayS,dayE,by = 'days')
actions <- data.frame(time = seq_days,
act = round(runif(length(seq_days),-1,1),digits = 2))
DT <- subset(DT,time > dayS & time <= dayE)
DT$date <- as.Date(DT$time)
DT <- subset(DT,date > dayS & date <= dayE)
load(file.path(dir_data,'bitstampUSD.Rda'))
dayS <- as.Date('2011-10-01')
dayE <- as.Date('2017-04-29')
seq_days <- seq.Date(dayS,dayE,by = 'days')
actions <- data.frame(time = seq_days,
act = round(runif(length(seq_days),-1,1),digits = 2))
DT$date <- as.Date(DT$time)
DT$date <- as.Date(DT$time)
dayS
dayE
DT <- subset(DT,date > dayS & date <= dayE)
DP <- get_diurnal_price(DT,'mean')
get_diurnal_price <- function(DT,mtd = 'mean'){
f <- get(mtd)
v <- melt(tapply(DT$price,DT$date,f))
names(v) <- c('date','value')
v$value <- round(v$value,digits = 4)
return(v)
}
DP <- get_diurnal_price(DT,'mean')
setdiff(actions$time,DP$date)
get_diurnal_price <- function(DT,mtd = 'mean'){
f <- get(mtd)
v <- melt(tapply(DT$price,DT$date,f))
names(v) <- c('time','value')
v$value <- round(v$value,digits = 4)
v$time <- as.Date(v$time)
return(v)
}
DP <- get_diurnal_price(DT,'mean')
setdiff(actions$time,DP$date)
setdiff(actions$time,DP$time)
patch_missing_price <- function(DP,missing_date){
left_value <- DP$value[which.max(DP$time < missing_date)]
right_value <- DP$value[which.min(DP$time > missing_date)]
return(data.frame(time = missing_date,
value = (left_value + right_value)/2))
}
DP_missing <- lapplyX(setdiff(actions$time,DP$time),function(t)patch_missing_price(DP,t))
View(DP_missing)
missing_date <- setdiff(actions$time,DP$time)[1]
missing_date
which.max(DP$time < missing_date)
which.min(DP$time > missing_date)
missing_date <- as.Date(missing_date,origin = '1970-01-01')
left_value <- DP$value[which.max(DP$time < missing_date)]
right_value <- DP$value[which.min(DP$time > missing_date)]
missing_date
View(DP)
dayS <- as.Date('2011-11-01')
dayE <- as.Date('2017-04-01')
seq_days <- seq.Date(dayS,dayE,by = 'days')
actions <- data.frame(time = seq_days,
act = round(runif(length(seq_days),-1,1),digits = 2))
DT$date <- as.Date(DT$time)
DT <- subset(DT,date > dayS & date <= dayE)
DP <- get_diurnal_price(DT,'mean')
DP_missing <- lapplyX(setdiff(actions$time,DP$time),function(t)patch_missing_price(DP,t))
View(DP_missing)
setdiff(actions$time,DP$time)
missing_time <- as.Date(setdiff(actions$time,DP$time),origin = '1970-01-01')
patch_missing_price <- function(DP,missing_date){
left_value <- DP$value[which.max(DP$time < missing_date)]
right_value <- DP$value[which.min(DP$time > missing_date)]
return(data.frame(time = missing_date,
value = (left_value + right_value)/2))
}
missing_time[1]
View(DV)
load(file.path(dir_data,'bitstampUSD.Rda'))
dayS <- as.Date('2011-11-01')
dayE <- as.Date('2017-04-01')
seq_days <- seq.Date(dayS,dayE,by = 'days')
actions <- data.frame(time = seq_days,
act = round(runif(length(seq_days),-1,1),digits = 2))
DT$date <- as.Date(DT$time)
DT <- subset(DT,date > dayS & date <= dayE)
load(file.path(dir_data,'bitstampUSD.Rda'))
DT$date <- as.Date(DT$time)
a <- melt(table(DT$date))
View(a)
load(file.path(dir_data,'bitstampUSD.Rda'))
DT$date <- as.Date(DT$time)
DT <- subset(DT,date >= dayS & date <= dayE)
DP <- get_diurnal_price(DT,'mean')
missing_time <- as.Date(setdiff(actions$time,DP$time),origin = '1970-01-01')
View(DP_missing)
missing_time
return(data.frame(time = as.Date(missing_date,origin = '1970-01-01'),
value = (left_value + right_value)/2))
patch_missing_price <- function(DP,missing_date){
left_value <- DP$value[which.max(DP$time < missing_date)]
right_value <- DP$value[which.min(DP$time > missing_date)]
return(data.frame(time = as.Date(missing_date,origin = '1970-01-01'),
value = (left_value + right_value)/2))
}
DP_missing <- lapplyX(missing_time,function(t)patch_missing_price(DP,t))
View(DP_missing)
missing_date <- missing_time[1]
which.max(DP$time < missing_date)
which.min(DP$time > missing_date)
missing_date
DP$time
which.min(DP$time > missing_date)
class(missing_date)
class(DP$time)
missing_date
DP$time
a <- DP$time[1:10]
a
a < missing_date
which.max(diff.Date(missing_date,DP$time) > 0)
diff.Date(missing_date,DP$time)
diff(missing_date,DP$time)
missing_date
a
a - missing_date
which.max(missing_date - DP$time > 0)
which.max((missing_date - DP$time) > 0)
which.min((DP$time - missing_date) > 0)
(DP$time - missing_date)
min((DP$time - missing_date) > 0)
which.min((DP$time - missing_date) > 0)
(DP$time - missing_date) > 0
which(c(1,2,3) > 0)
which.min(c(1,2,3) > 0)
a
which((a-missing_date) > 0)
max(which(missing_date - DP$time) > 0)
max(which((missing_date - DP$time) > 0))
min(which((DP$time - missing_date) > 0))
left_value <- DP$value[max(which((missing_date - DP$time) > 0))]
patch_missing_price <- function(DP,missing_date){
left_value <- DP$value[max(which((missing_date - DP$time) > 0))]
right_value <- DP$value[min(which((DP$time - missing_date) > 0))]
return(data.frame(time = as.Date(missing_date,origin = '1970-01-01'),
value = (left_value + right_value)/2))
}
DP_missing <- lapplyX(missing_time,function(t)patch_missing_price(DP,t))
View(DP_missing)
missing_time
DP <- rbind(DP,DP_missing)
DP <- DP[order(DP$time),]
actions$num_cash <- 0;actions$num_coin <- 0;actions$total_revenue <- 0
actions$num_cash[1] <- 100
View(actions)
DP$act <- actions$act[match(DP$time,actions$time)]
DP$num_cash <- 0;DP$num_coin <- 0;DP$total_revenue <- 0
DP$num_cash[1] <- 100
head(DP)
get_diurnal_reward <- function(DP){
DP$num_cash <- 0;DP$num_coin <- 0;DP$total_revenue <- 0
DP$num_cash[1] <- 100;DP$total_revenue[1] <- DP$num_cash[1] + DP$num_coin[1]*DP$value[1]
for(i in seq_len(row(DP))){
if(DP$act[i] > 0){
val <- DP$num_cash[i]*DP$act[i]
DP$num_cash[i+1] <- DP$num_cash[i] - val
DP$num_coin[i+1] <- DP$num_coin[i] + val/DP$value[i]
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else(DP$act[i] < 0){
val <- DP$value[i]*DP$num_coin[i]*(-DP$act[i])
DP$num_cash[i+1] <- DP$num_cash[i] + val
DP$num_coin[i+1] <- DP$num_coin*(1 + DP$act[i])
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}
}
return(DP)
}
get_diurnal_reward <- function(DP){
DP$num_cash <- 0;DP$num_coin <- 0;DP$total_revenue <- 0
DP$num_cash[1] <- 100;DP$total_revenue[1] <- DP$num_cash[1] + DP$num_coin[1]*DP$value[1]
for(i in seq_len(row(DP))){
if(DP$act[i] > 0){
val <- DP$num_cash[i]*DP$act[i]
DP$num_cash[i+1] <- DP$num_cash[i] - val
DP$num_coin[i+1] <- DP$num_coin[i] + val/DP$value[i]
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else(DP$act[i] < 0){
val <- DP$value[i]*DP$num_coin[i]*(-DP$act[i])
DP$num_cash[i+1] <- DP$num_cash[i] + val
DP$num_coin[i+1] <- DP$num_coin*(1 + DP$act[i])
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}
}
return(DP)
}
get_diurnal_reward <- function(DP){
DP$num_cash <- 0;DP$num_coin <- 0;DP$total_revenue <- 0
DP$num_cash[1] <- 100;DP$total_revenue[1] <- DP$num_cash[1] + DP$num_coin[1]*DP$value[1]
for(i in seq_len(row(DP))){
if(DP$act[i] > 0){
val <- DP$num_cash[i]*DP$act[i]
DP$num_cash[i+1] <- DP$num_cash[i] - val
DP$num_coin[i+1] <- DP$num_coin[i] + val/DP$value[i]
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else(DP$act[i] < 0){
val <- DP$value[i]*DP$num_coin[i]*(-DP$act[i])
DP$num_cash[i+1] <- DP$num_cash[i] + val
DP$num_coin[i+1] <- DP$num_coin*(1 + DP$act[i])
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}
}
return(DP)
}
for(i in seq_len(row(DP))){
if(DP$act[i] > 0){
val <- DP$num_cash[i]*DP$act[i]
DP$num_cash[i+1] <- DP$num_cash[i] - val
DP$num_coin[i+1] <- DP$num_coin[i] + val/DP$value[i]
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else(DP$act[i] < 0){
val <- DP$value[i]*DP$num_coin[i]*(-DP$act[i])
DP$num_cash[i+1] <- DP$num_cash[i] + val
DP$num_coin[i+1] <- DP$num_coin*(1 + DP$act[i])
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else{
DP[i+1,c('num_cash','num_coin','total_revenue')] <- DP[i,c('num_cash','num_coin','total_revenue')]
}
}
get_diurnal_reward <- function(DP){
DP$num_cash <- 0;DP$num_coin <- 0;DP$total_revenue <- 0
DP$num_cash[1] <- 100;DP$total_revenue[1] <- DP$num_cash[1] + DP$num_coin[1]*DP$value[1]
for(i in seq_len(row(DP))){
if(DP$act[i] > 0){
val <- DP$num_cash[i]*DP$act[i]
DP$num_cash[i+1] <- DP$num_cash[i] - val
DP$num_coin[i+1] <- DP$num_coin[i] + val/DP$value[i]
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else(DP$act[i] < 0){
val <- DP$value[i]*DP$num_coin[i]*(-DP$act[i])
DP$num_cash[i+1] <- DP$num_cash[i] + val
DP$num_coin[i+1] <- DP$num_coin*(1 + DP$act[i])
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else{
DP[i+1,c('num_cash','num_coin','total_revenue')] <- DP[i,c('num_cash','num_coin','total_revenue')]
}
}
return(DP)
}
for(i in seq_len(row(DP))){
if(DP$act[i] > 0){
val <- DP$num_cash[i]*DP$act[i]
DP$num_cash[i+1] <- DP$num_cash[i] - val
DP$num_coin[i+1] <- DP$num_coin[i] + val/DP$value[i]
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else if(DP$act[i] < 0){
val <- DP$value[i]*DP$num_coin[i]*(-DP$act[i])
DP$num_cash[i+1] <- DP$num_cash[i] + val
DP$num_coin[i+1] <- DP$num_coin*(1 + DP$act[i])
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else{
DP[i+1,c('num_cash','num_coin','total_revenue')] <- DP[i,c('num_cash','num_coin','total_revenue')]
}
}
get_diurnal_reward <- function(DP){
DP$num_cash <- 0;DP$num_coin <- 0;DP$total_revenue <- 0
DP$num_cash[1] <- 100;DP$total_revenue[1] <- DP$num_cash[1] + DP$num_coin[1]*DP$value[1]
for(i in seq_len(row(DP))){
if(DP$act[i] > 0){
val <- DP$num_cash[i]*DP$act[i]
DP$num_cash[i+1] <- DP$num_cash[i] - val
DP$num_coin[i+1] <- DP$num_coin[i] + val/DP$value[i]
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else if(DP$act[i] < 0){
val <- DP$value[i]*DP$num_coin[i]*(-DP$act[i])
DP$num_cash[i+1] <- DP$num_cash[i] + val
DP$num_coin[i+1] <- DP$num_coin*(1 + DP$act[i])
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else{
DP[i+1,c('num_cash','num_coin','total_revenue')] <- DP[i,c('num_cash','num_coin','total_revenue')]
}
}
return(DP)
}
DP <- get_diurnal_reward(DP)
DP$num_cash <- 0;DP$num_coin <- 0;DP$total_revenue <- 0
DP$num_cash[1] <- 100;DP$total_revenue[1] <- DP$num_cash[1] + DP$num_coin[1]*DP$value[1]
seq_len(row(DP))
get_diurnal_reward <- function(DP){
DP$num_cash <- 0;DP$num_coin <- 0;DP$total_revenue <- 0
DP$num_cash[1] <- 100;DP$total_revenue[1] <- DP$num_cash[1] + DP$num_coin[1]*DP$value[1]
for(i in seq_len(nrow(DP))){
if(DP$act[i] > 0){
val <- DP$num_cash[i]*DP$act[i]
DP$num_cash[i+1] <- DP$num_cash[i] - val
DP$num_coin[i+1] <- DP$num_coin[i] + val/DP$value[i]
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else if(DP$act[i] < 0){
val <- DP$value[i]*DP$num_coin[i]*(-DP$act[i])
DP$num_cash[i+1] <- DP$num_cash[i] + val
DP$num_coin[i+1] <- DP$num_coin*(1 + DP$act[i])
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else{
DP[i+1,c('num_cash','num_coin','total_revenue')] <- DP[i,c('num_cash','num_coin','total_revenue')]
}
}
return(DP)
}
DP <- get_diurnal_reward(DP)
warnings()
DP$num_cash <- 0;DP$num_coin <- 0;DP$total_revenue <- 0
DP$num_cash[1] <- 100;DP$total_revenue[1] <- DP$num_cash[1] + DP$num_coin[1]*DP$value[1]
i = 1
DP$act[i] > 0
val <- DP$num_cash[i]*DP$act[i]
DP$num_cash[i+1] <- DP$num_cash[i] - val
DP$num_coin[i+1] <- DP$num_coin[i] + val/DP$value[i]
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
get_diurnal_reward <- function(DP){
DP$num_cash <- 0;DP$num_coin <- 0;DP$total_revenue <- 0
DP$num_cash[1] <- 100;DP$total_revenue[1] <- DP$num_cash[1] + DP$num_coin[1]*DP$value[1]
for(i in seq_len((nrow(DP)-1))){
if(DP$act[i] > 0){
val <- DP$num_cash[i]*DP$act[i]
DP$num_cash[i+1] <- DP$num_cash[i] - val
DP$num_coin[i+1] <- DP$num_coin[i] + val/DP$value[i]
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else if(DP$act[i] < 0){
val <- DP$value[i]*DP$num_coin[i]*(-DP$act[i])
DP$num_cash[i+1] <- DP$num_cash[i] + val
DP$num_coin[i+1] <- DP$num_coin*(1 + DP$act[i])
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else{
DP[i+1,c('num_cash','num_coin','total_revenue')] <- DP[i,c('num_cash','num_coin','total_revenue')]
}
}
return(DP)
}
DP <- get_diurnal_reward(DP)
warnings()
get_diurnal_reward <- function(DP){
DP$num_cash <- 0;DP$num_coin <- 0;DP$total_revenue <- 0
DP$num_cash[1] <- 100;DP$total_revenue[1] <- DP$num_cash[1] + DP$num_coin[1]*DP$value[1]
for(i in seq_len((nrow(DP)-1))){
if(DP$act[i] > 0){
val <- DP$num_cash[i]*DP$act[i]
DP$num_cash[i+1] <- DP$num_cash[i] - val
DP$num_coin[i+1] <- DP$num_coin[i] + val/DP$value[i]
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else if(DP$act[i] < 0){
val <- DP$value[i]*DP$num_coin[i]*(-DP$act[i])
DP$num_cash[i+1] <- DP$num_cash[i] + val
DP$num_coin[i+1] <- DP$num_coin[i]*(1 + DP$act[i])
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else{
DP[i+1,c('num_cash','num_coin','total_revenue')] <- DP[i,c('num_cash','num_coin','total_revenue')]
}
}
return(DP)
}
DP <- get_diurnal_reward(DP)
View(DP)
get_diurnal_reward <- function(DP){
DP$num_cash <- 0;DP$num_coin <- 0;DP$total_revenue <- 0
DP$num_cash[1] <- 100;DP$total_revenue[1] <- DP$num_cash[1] + DP$num_coin[1]*DP$value[1]
for(i in seq_len((nrow(DP)-1))){
if(DP$act[i] > 0){
val <- DP$num_cash[i]*DP$act[i]
DP$num_cash[i+1] <- DP$num_cash[i] - val
DP$num_coin[i+1] <- DP$num_coin[i] + val/DP$value[i]
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else if(DP$act[i] < 0){
val <- DP$value[i]*DP$num_coin[i]*(-DP$act[i])
DP$num_cash[i+1] <- DP$num_cash[i] + val
DP$num_coin[i+1] <- DP$num_coin[i]*(1 + DP$act[i])
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$value[i+1]
}else{
DP[i+1,c('num_cash','num_coin','total_revenue')] <- DP[i,c('num_cash','num_coin','total_revenue')]
}
}
DP$num_cash <- roundX(DP$num_cash);DP$num_coin <- roundX(DP$num_coin);DP$total_revenue <- roundX(DP$total_revenue)
return(DP)
}
DP <- get_diurnal_reward(DP)
ggplot(DP,)
ggplot(DP,aes(x = time)) + geom_line(aes(y = value)) + geom_line((aes(y = total_revenue)))
ggplot(DP,aes(x = time)) + geom_line(aes(y = value))
View(DP)
rm(list = ls());setwd('~/Code/R/COIN/');source('~/rhead')
get_diurnal_price <- function(DT,mtd = 'mean'){
f <- get(mtd)
v <- melt(tapply(DT$price,DT$date,f))
names(v) <- c('time','price')
v$price <- round(v$price,digits = 4)
v$time <- as.Date(v$time)
return(v)
}
patch_missing_price <- function(DP,missing_date){
left_value <- DP$price[max(which((missing_date - DP$time) > 0))]
right_value <- DP$price[min(which((DP$time - missing_date) > 0))]
return(data.frame(time = as.Date(missing_date,origin = '1970-01-01'),
price = (left_value + right_value)/2))
}
get_diurnal_reward <- function(DP){
DP$num_cash <- 0;DP$num_coin <- 0;DP$total_revenue <- 0
DP$num_cash[1] <- 100;DP$total_revenue[1] <- DP$num_cash[1] + DP$num_coin[1]*DP$price[1]
for(i in seq_len((nrow(DP)-1))){
if(DP$act[i] > 0){
val <- DP$num_cash[i]*DP$act[i]
DP$num_cash[i+1] <- DP$num_cash[i] - val
DP$num_coin[i+1] <- DP$num_coin[i] + val/DP$price[i]
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$price[i+1]
}else if(DP$act[i] < 0){
val <- DP$price[i]*DP$num_coin[i]*(-DP$act[i])
DP$num_cash[i+1] <- DP$num_cash[i] + val
DP$num_coin[i+1] <- DP$num_coin[i]*(1 + DP$act[i])
DP$total_revenue[i+1] <- DP$num_cash[i+1] + DP$num_coin[i+1]*DP$price[i+1]
}else{
DP[i+1,c('num_cash','num_coin','total_revenue')] <- DP[i,c('num_cash','num_coin','total_revenue')]
}
}
DP$num_cash <- roundX(DP$num_cash);DP$num_coin <- roundX(DP$num_coin);DP$total_revenue <- roundX(DP$total_revenue)
return(DP)
}
dayS <- as.Date('2011-11-01')
dayE <- as.Date('2017-04-01')
seq_days <- seq.Date(dayS,dayE,by = 'days')
actions <- data.frame(time = seq_days,
act = round(runif(length(seq_days),-1,1),digits = 2))
load(file.path(dir_data,'bitstampUSD.Rda'))
DT$date <- as.Date(DT$time)
DT <- subset(DT,date >= dayS & date <= dayE)
DP <- get_diurnal_price(DT,'mean')
missing_time <- as.Date(setdiff(actions$time,DP$time),origin = '1970-01-01')
DP_missing <- lapplyX(missing_time,function(t)patch_missing_price(DP,t))
DP <- rbind(DP,DP_missing)
DP <- DP[order(DP$time),]
DP$act <- actions$act[match(DP$time,actions$time)]
DP <- get_diurnal_reward(DP)
ggplot(DP,aes(x = time)) + geom_line(aes(y = price)) + geom_line((aes(y = total_revenue)))
View(actions)
View(DP)
View(DP)
