names(atrisk) <- c('age','duty')
atrisk$count <- 0
View(atrisk)
a <- dcast(age~duty,atrisk,value.var = 'count')
a <- dcast(age~duty,data = atrisk,value.var = 'count')
View(a)
list[x1,y1,x2,y2] <- list(1,1,7,7)
x1
x2
slope <- (y2-y1)/(x2-x1)
x1 <- floor(x1)
x2 <- ceiling(x2)
slope <- (y2-y1)/(x2-x1)
intercept <- (x1*y2-x2*y1)/(x1-x2)
x1 <- floor(x1)
x2 <- ceiling(x2)
seqx <- x1:x2
seqy <- slope*x + intercept
seqy <- slope*seqx + intercept
seqy
list[x1,y1,x2,y2] <- list(1,1,76,9)
slope <- (y2-y1)/(x2-x1)
intercept <- (x1*y2-x2*y1)/(x1-x2)
x1 <- floor(x1)
x2 <- ceiling(x2)
seqx <- x1:x2
seqy <- slope*seqx + intercept
seqx <- unique(round(x1:x2))
seqy <- unique(round(slope*seqx + intercept))
seqx <- unique(round(x1:x2))
seqy <- round(slope*seqx + intercept)
source('~/Code/R/Disk_Workload/Failure/mcf201406_dutytime.R')
p
View(mcf_cencored)
View(life_censored)
View(DT_mean)
source('~/Code/R/Disk_Workload/duty_time/sta_duty_cycle.R')
View(DT_mean)
summary(DT_mean)
DT_mean <- replace_value(DT_mean,v2 = -1)
summary(DT_mean)
ggplot(DT_mean,aes(x = utilM, y = utilCV)) + geom_point(alpha = 0.1)
ggplot(DT_mean,aes(x = utilM, y = utilCV)) + geom_point(alpha = 0.001)
ggplot(DT_mean,aes(x = log2(utilM), y = log2(utilCV))) + geom_point(alpha = 0.01)
ggplot(DT_mean,aes(x = utilM, y = utilSD)) + geom_point(alpha = 0.01)
ggplot(DT_mean,aes(x = utilM, y = utilS)) + geom_point(alpha = 0.01)
summary(DT_mean$utilS)
ggplot(DT_mean,aes(x = utilM, y = utilS)) + geom_point(alpha = 0.05)
quantileX(DT_mean$utilM)
quantileX(DT_mean$utilCV)
ggplot(DT_mean,aes(x = utilM, y = utilCV)) + geom_point(alpha = 0.01)
ggplot(DT_mean,aes(x = utilM)) + geom_point(aes(y = utilS),color = cbPalette[1],alpha = 0.05) + geom_point(aes(y = utilCV),color = cbPalette[2],alpha = 0.05)
ggplot(smp_df(DT_mean,0.1),aes(x = 2^utilM)) +
geom_point(aes(y = utilS),color = cbPalette[1],alpha = 0.05)
ggplot(smp_df(DT_mean,0.1),aes(x = 2^utilM)) +
geom_point(aes(y = utilS),color = cbPalette[1],alpha = 0.5)
ggplot(smp_df(DT_mean,0.1),aes(x = log2(utilM))) +
geom_point(aes(y = utilS),color = cbPalette[1],alpha = 0.05) +
geom_point(aes(y = utilCV),color = cbPalette[2],alpha = 0.01)
ggplot(smp_df(DT_mean,0.1),aes(x = log2(utilM))) +
geom_point(aes(y = utilS),color = cbPalette[1],alpha = 0.05) +
geom_point(aes(y = utilCV),color = cbPalette[3],alpha = 0.01)
ggplot(smp_df(DT_mean,0.1),aes(x = log2(utilM))) +
geom_point(aes(y = utilS),color = cbPalette[1],alpha = 0.05) +
geom_point(aes(y = utilCV),color = cbPalette[4],alpha = 0.01)
ggplot(smp_df(DT_mean,0.1),aes(x = log2(utilM))) +
geom_point(aes(y = utilS),color = cbPalette[1],alpha = 0.05) +
geom_point(aes(y = utilCV),color = cbPalette[6],alpha = 0.01)
ggplot(smp_df(DT_mean,0.1),aes(x = log2(utilM))) +
geom_point(aes(y = utilS),color = cbPalette[1],alpha = 0.05) +
geom_point(aes(y = utilCV),color = cbPalette[6],alpha = 0.05)
summary(DT_mean$utilCV)
a <- subset(DT_mean,utilCV > 130)
View(a)
View(DT_mean)
rm(list = ls());setwd('~/Code/R/Disk_Workload/');source('~/rhead')
load(file.path(dir_data,'duty_time_groupby_mean.Rda'))
View(DT_mean)
DT_mean <- replace_value(DT_mean,v2 = -1)
DT_mean <- subsetX(DT_mean,count > 15000)
quan_util <- with(DT_mean,data.frame(quantileX(utilM),quantileX(utilS),quantileX(utilCV)))
View(quan_util)
source('~/Code/R/R_libs_user/R_custom_lib.R')
quan_util <- with(DT_mean,data.frame(quantileX(utilM),quantileX(utilS),quantileX(utilCV)))
View(quan_util)
quan_util <- with(DT_mean,data.frame(mean = quantileX(utilM),SD = quantileX(utilS),CV = quantileX(utilCV)))
a <- subset(DT_mean,utilCV > 10)
View(a)
ggplot(a,aes(x = utilM,y = utilS,color = utilCV)) + geom_point()
ggplot(a,aes(x = utilM,y = utilS,color = utilCV)) + geom_point(alpha = 0.1)
ggplot(a,aes(x = utilM,y = utilS,color = utilCV)) + geom_point()
quan_util$id <- 0:100
ggplot(DT_mean,aes(x = utilM)) + geom_histogram(binwidth = 1)
b <- melt(table(round(DT_mean$utilM)))
ggplot(b,aes(x = Var1,y = log2(value))) + geom_bar(stat = 'identity')
ggplot(quan_util,aes(x = id,y = mean)) + geom_line() + geom_point()
ggplot(quan_util,aes(x = id,y = mean)) + geom_line() + geom_point() + xlim(c(0,33))
ggplot(subset(quan_util,id < 33),aes(x = id,y = mean)) + geom_line() + geom_point()
ggplot(subset(quan_util,id < 20),aes(x = id,y = mean)) + geom_line() + geom_point()
ggplot(subset(quan_util,id < 50),aes(x = id,y = mean)) + geom_line() + geom_point()
ggplot(subset(quan_util,id < 10),aes(x = id,y = mean)) + geom_line() + geom_point()
ggplot(subset(quan_util,id < 20),aes(x = id,y = mean)) + geom_line() + geom_point()
i = 0;ggplot(subset(quan_util,id < i + 20 & id > i),aes(x = id,y = mean)) + geom_line() + geom_point()
i = 20;ggplot(subset(quan_util,id < i + 20 & id > i),aes(x = id,y = mean)) + geom_line() + geom_point()
i = 40;ggplot(subset(quan_util,id < i + 20 & id > i),aes(x = id,y = mean)) + geom_line() + geom_point()
i = 60;ggplot(subset(quan_util,id < i + 20 & id > i),aes(x = id,y = mean)) + geom_line() + geom_point()
i = 70;ggplot(subset(quan_util,id < i + 20 & id > i),aes(x = id,y = mean)) + geom_line() + geom_point()
i = 80;ggplot(subset(quan_util,id < i + 20 & id > i),aes(x = id,y = mean)) + geom_line() + geom_point()
DT0 <- subset(DT_mean,utilM < 1)
DT1 <- subset(DT_mean,utilM < 2)
DT2 <- subset(DT_mean,utilM >= 2)
DT0 <- subset(DT_mean,utilM < 1)
DT1 <- subset(DT_mean,utilM < 2 & utilM >= 1)
DT2 <- subset(DT_mean,utilM >= 2)
ggplot(DT0,aes(x = utilM,y = utilSD,color = utilCV)) + geom_point()
ggplot(DT0,aes(x = utilM,y = utilS,color = utilCV)) + geom_point()
p0 <- ggplot(DT0,aes(x = utilM,y = utilS,color = utilCV)) + geom_point() + scale_color_continuous()
p0
p0 <- ggplot(DT0,aes(x = utilM,y = utilS,color = utilCV)) + geom_point() + scale_color_brewer()
p0
p0 <- ggplot(DT0,aes(x = utilM,y = utilS,color = utilCV)) + geom_point() + scale_color_grey(,start = 0.1,end = 0.9)
p0 <- ggplot(DT0,aes(x = utilM,y = utilS,color = utilCV)) + geom_point() + scale_color_grey(start = 0.1,end = 0.9)
p0
ggplot(DT0,aes(x = utilM,y = utilS,color = utilCV)) + geom_point() + scale_color_grey()
p0 <- ggplot(DT0,aes(x = utilM,y = utilS,color = utilCV)) + geom_point() + scale_fill_brewer(palette='Set1')
p0
ggplot(smp_df(DT0,0.2),aes(x = utilM,y = utilS,color = utilCV)) + geom_point() + scale_fill_brewer(palette='Set2')
ggplot(smp_df(DT0,0.2),aes(x = utilM,y = utilS,color = utilCV)) + geom_point() + scale_colour_gradient(low = "white", high = "black")
ggplot(smp_df(DT0,0.2),aes(x = utilM,y = utilS,color = utilCV)) + geom_point() + scale_colour_gradient(low = "red", high = "green")
ggplot(smp_df(DT0,0.2),aes(x = utilM,y = utilS,color = utilCV)) + geom_point() +  scale_colour_gradient2()
ggplot(smp_df(DT0,0.2),aes(x = utilM,y = utilS,color = utilCV)) + geom_point() + scale_colour_gradient(low = "red", high = "green")
p0 <- ggplot(smp_df(DT0,0.2),aes(x = utilM,y = utilS,color = utilCV)) + geom_point() + scale_colour_gradient(low = "red", high = "green")
p1 <- ggplot(smp_df(DT1,0.2),aes(x = utilM,y = utilS,color = utilCV)) + geom_point()+ scale_colour_gradient(low = "red", high = "green")
p2 <- ggplot(smp_df(DT2,0.2),aes(x = utilM,y = utilS,color = utilCV)) + geom_point()+ scale_colour_gradient(low = "red", high = "green")
multiplot(p0,p1,p2,cols = 3)
DT0 <- subset(DT_mean,utilM < 1)
DT1 <- subset(DT_mean,utilM < 2 & utilM >= 1)
DT2 <- subset(DT_mean,utilM >= 2 & utilM < 10)
DT3 <- subset(DT_mean,utilM >= 10)
p0 <- ggplot(smp_df(DT0,0.2),aes(x = utilM,y = utilS,color = utilCV)) + geom_point() + scale_colour_gradient(low = "red", high = "green")
p1 <- ggplot(smp_df(DT1,0.2),aes(x = utilM,y = utilS,color = utilCV)) + geom_point()+ scale_colour_gradient(low = "red", high = "green")
p2 <- ggplot(smp_df(DT2,0.2),aes(x = utilM,y = utilS,color = utilCV)) + geom_point()+ scale_colour_gradient(low = "red", high = "green")
p3 <- ggplot(smp_df(DT3,0.2),aes(x = utilM,y = utilS,color = utilCV)) + geom_point()+ scale_colour_gradient(low = "red", high = "green")
multiplot(p0,p1,p2,p3,cols = 2)
cut_mean <- sort(unique(round(quan_util$mean)));DT_mean$mean_level <- cut(DT_mean$utilM,cut_mean,cut_mean[-length(cut_mean)])
View(DT_mean)
length(unique(DT_mean$mean_level))
cut_mean <- sort(unique(round(quan_util$mean)));DT_mean$mean_level <- cut(DT_mean$utilM,cut_mean,cut_mean[-length(cut_mean)])
cut_SD <- sort(unique(round(quan_util$SD)));DT_mean$SD_level <- cut(DT_mean$utilS,cut_SD,cut_SD[-length(cut_SD)])
cut_CV <- sort(unique(round(quan_util$CV)));DT_mean$CV_level <- cut(DT_mean$utilS,cut_CV,cut_CV[-length(cut_CV)])
DT_mean <- replace_value(DT_mean,v2 = -1)
cut_mean <- sort(unique(round(quan_util$mean)));DT_mean$mean_level <- fct2ori(cut(DT_mean$utilM,cut_mean,cut_mean[-length(cut_mean)]))
cut_SD <- sort(unique(round(quan_util$SD)));DT_mean$SD_level <- fct2ori(cut(DT_mean$utilS,cut_SD,cut_SD[-length(cut_SD)]))
cut_CV <- sort(unique(round(quan_util$CV)));DT_mean$CV_level <- fct2ori(cut(DT_mean$utilS,cut_CV,cut_CV[-length(cut_CV)]))
DT_mean <- replace_value(DT_mean,v2 = -1)
cut_mean <- sort(unique(round(quan_util$mean)));DT_mean$mean_level <- fct2num(cut(DT_mean$utilM,cut_mean,cut_mean[-length(cut_mean)]))
cut_SD <- sort(unique(round(quan_util$SD)));DT_mean$SD_level <- fct2num(cut(DT_mean$utilS,cut_SD,cut_SD[-length(cut_SD)]))
cut_CV <- sort(unique(round(quan_util$CV)));DT_mean$CV_level <- fct2num(cut(DT_mean$utilS,cut_CV,cut_CV[-length(cut_CV)]))
DT_mean <- replace_value(DT_mean,v2 = -1)
tb_level <- with(DT_mean,melt(table(mean_level,SD_level,CV_level)))
tb_level <- subset(tb_level,value != 0)
View(tb_level)
cut_CV
tb_level <- with(DT_mean,melt(table(mean_level,SD_level,CV_level)))
sort(unique(round(quan_util$CV)))
cut_mean <- sort(unique(round(quan_util$mean)));DT_mean$mean_level <- fct2num(cut(DT_mean$utilM,cut_mean,cut_mean[-length(cut_mean)]))
cut_SD <- sort(unique(round(quan_util$SD)));DT_mean$SD_level <- fct2num(cut(DT_mean$utilS,cut_SD,cut_SD[-length(cut_SD)]))
cut_CV <- sort(unique(round(quan_util$CV)));DT_mean$CV_level <- fct2num(cut(DT_mean$utilCV,cut_CV,cut_CV[-length(cut_CV)]))
DT_mean <- replace_value(DT_mean,v2 = -1)
tb_level <- with(DT_mean,melt(table(mean_level,SD_level,CV_level)))
tb_level <- subset(tb_level,value != 0)
rm(list = ls());setwd('~/Code/R/COIN/bitstamp/');source('~/rhead')
load(file.path(dir_data,'bitstamp_xts.Rda'))
DT.4h <- get_xts_period(DT,'hours',4)
ma_20 <- runMean(DT.4h[,4],n = 20)
ma_10 <- runMean(DT.4h[,4],n = 10)
ma_10
rm(list = ls());setwd('~/Code/R/COIN/bitstamp/');source('~/rhead')
require(Hmisc)
require(quantmod)
require(TTR)
load(file.path(dir_data,'bitstamp_xts.Rda'))
DT.1d <- get_xts_period(DT,'days',1)
summary(DT.1d)
DT.1d[1]
start <- as.p('2012-01-01')
start
start <- as.p1('2012-01-01')
start
account <- list(start,end,capital_base)
start <- '2012-01-01'
end <- '2017-04-01'
capital_base <- 10000
account <- list(start,end,capital_base)
account
account <- list(start = start,
end = end,
capital_base = capital_base)
account$start
DT <- DT.1d[account$start::account$end]
DT <- DT.1d[account$start:account$end]
DT[start]
DT[end]
DT[start]
DT <- DT.1d[account$start::account$end]
?xts
DT <- DT.1d[account$start/account$end]
start <- '2017-01-01'
end <- '2017-04-01'
capital_base <- 10000
account <- list(start = start,
end = end,
capital_base = capital_base)
DT <- DT.1d[account$start/account$end]
account$start
account$end
DT <- DT.1d[paste(account$start,'/',account$end,sep='')]
summary(DT)
ma5 <- runMean(DT[,4],n = 5)
ma10 <- runMean(DT[,4],n = 10)
ma5
ma5.value
as.numeric(ma5)
start <- '2017-01-01'
end <- '2017-04-01'
money_base <- 10000
btc_base <- 0
account <- list(start = start,
end = end,
money_base = money_base,
btc_base = btc_base)
length(ma5)
ma5>ma10
for(i in ma5>ma10){
if(is.na(i))next
}
dif <- ma5 - ma10
dif <- ma5 - ma10
for(i in seq_len(length(dif))){
if(is.na(dif[i]))next
}
dif[i]
policy <- rep(0,length(DT))
policy <- rep(0,nrow(DT))
policy <- dif_5_10 > 0
dif_5_10 <- ma5 - ma10
policy <- dif_5_10 > 0
policy
dif_5_10 <- ma5 - ma10
policy <- as.numeric(dif_5_10 > 0)
policy[is.na(policy)] <- 0
dif_5_10 <- ma5 - ma10
policy[dif_5_10 > 0] <- 1
policy[dif_5_10 < 0] <- -1
policy <- rep(0,nrow(DT))
dif_5_10 <- ma5 - ma10
policy[dif_5_10 > 0] <- 1
policy[dif_5_10 < 0] <- -1
account <- list(start = start,
end = end,
money_base = money_base,
btc_base = btc_base)
DT <- DT.1d[paste(account$start,'/',account$end,sep='')]
ma5 <- runMean(DT[,4],n = 5)
ma10 <- runMean(DT[,4],n = 10)
policy <- rep(0,nrow(DT))
dif_5_10 <- ma5 - ma10
policy[dif_5_10 > 0] <- 1
policy[dif_5_10 < 0] <- -1
rate_money <- 1
rate_btc <- 1
for(i in seq_len(length(policy))){
if(policy[i] == 1 & account$money_base > 0){
account$btc_base <- account$btc_base + account$money_base*rate/DT[i,4]
account$money_base <- account$money_base*(1-rate_money)
}else if(policy[i] == -1 & account$btc_base > 0){
account$money_base <- account$money_base + account$btc_base*rate*DT[i,4]
account$btc_base <- account$btc_base*(1-rate_btc)
}
}
for(i in seq_len(length(policy))){
if(policy[i] == 1 & account$money_base > 0){
account$btc_base <- account$btc_base + account$money_base*rate_money/DT[i,4]
account$money_base <- account$money_base*(1-rate_money)
}else if(policy[i] == -1 & account$btc_base > 0){
account$money_base <- account$money_base + account$btc_base*rate_btc*DT[i,4]
account$btc_base <- account$btc_base*(1-rate_btc)
}
}
length(policy)
nrow(DT)
DT[i,4]
policy[i]
policy[i] == 1 & account$money_base > 0
policy[i] == 1
account$money_base > 0
account
DT <- DT.1d[paste(account$start,'/',account$end,sep='')]
DT_price <- DT[,4]
ma5 <- runMean(DT[,4],n = 5)
ma10 <- runMean(DT[,4],n = 10)
policy <- rep(0,nrow(DT))
dif_5_10 <- ma5 - ma10
policy[dif_5_10 > 0] <- 1
policy[dif_5_10 < 0] <- -1
rate_money <- 1
rate_btc <- 1
for(i in seq_len(length(policy))){
if(policy[i] == 1 & account$money_base > 0){
account$btc_base <- account$btc_base + account$money_base*rate_money/DT_price[i]
account$money_base <- account$money_base*(1-rate_money)
}else if(policy[i] == -1 & account$btc_base > 0){
account$money_base <- account$money_base + account$btc_base*rate_btc*DT_price[i]
account$btc_base <- account$btc_base*(1-rate_btc)
}
}
policy[i] == 1
account
account <- list(start = start,
end = end,
money_base = money_base,
btc_base = btc_base)
for(i in seq_len(length(policy))){
if(policy[i] == 1 & account$money_base > 0){
account$btc_base <- account$btc_base + account$money_base*rate_money/DT_price[i]
account$money_base <- account$money_base*(1-rate_money)
}else if(policy[i] == -1 & account$btc_base > 0){
account$money_base <- account$money_base + account$btc_base*rate_btc*DT_price[i]
account$btc_base <- account$btc_base*(1-rate_btc)
}
}
account
btc_base
account <- list(start = start,
end = end,
money_base = money_base,
btc_base = btc_base)
account
DT_price <- as.numeric(DT[,4])
account <- list(start = start,
end = end,
money_base = money_base,
btc_base = btc_base)
DT <- DT.1d[paste(account$start,'/',account$end,sep='')]
DT_price <- as.numeric(DT[,4])
ma5 <- runMean(DT[,4],n = 5)
ma10 <- runMean(DT[,4],n = 10)
policy <- rep(0,nrow(DT))
dif_5_10 <- ma5 - ma10
policy[dif_5_10 > 0] <- 1
policy[dif_5_10 < 0] <- -1
rate_money <- 1
rate_btc <- 1
for(i in seq_len(length(policy))){
if(policy[i] == 1 & account$money_base > 0){
account$btc_base <- account$btc_base + account$money_base*rate_money/DT_price[i]
account$money_base <- account$money_base*(1-rate_money)
}else if(policy[i] == -1 & account$btc_base > 0){
account$money_base <- account$money_base + account$btc_base*rate_btc*DT_price[i]
account$btc_base <- account$btc_base*(1-rate_btc)
}
}
account
account$asset <- account$money_base + account$btc_base*DT_price[length(DT_price)]
account
rate_money <- 0.5
rate_btc <- 0.5
account <- list(start = start,
end = end,
money_base = money_base,
btc_base = btc_base)
for(i in seq_len(length(policy))){
if(policy[i] == 1 & account$money_base > 0){
account$btc_base <- account$btc_base + account$money_base*rate_money/DT_price[i]
account$money_base <- account$money_base*(1-rate_money)
}else if(policy[i] == -1 & account$btc_base > 0){
account$money_base <- account$money_base + account$btc_base*rate_btc*DT_price[i]
account$btc_base <- account$btc_base*(1-rate_btc)
}
}
account$asset <- account$money_base + account$btc_base*DT_price[length(DT_price)]
account
DT_price
account <- list(start = start,
end = end,
money_base = money_base,
btc_base = btc_base)
DT <- DT.1d[paste(account$start,'/',account$end,sep='')]
DT_price <- as.numeric(DT[,4])
ma5 <- runMean(DT[,4],n = 5)
ma10 <- runMean(DT[,4],n = 10)
policy <- rep(0,nrow(DT))
dif_5_10 <- ma5 - ma10
policy[dif_5_10 > 0] <- 1
policy[dif_5_10 < 0] <- -1
rate_money <- 0.5
rate_btc <- 0.5
fee <- 0.002
for(i in seq_len(length(policy))){
if(policy[i] == 1 & account$money_base > 0){
account$btc_base <- account$btc_base + account$money_base*rate_money/DT_price[i]*(1-fee)
account$money_base <- account$money_base*(1-rate_money)
}else if(policy[i] == -1 & account$btc_base > 0){
account$money_base <- account$money_base + account$btc_base*rate_btc*DT_price[i]*(1-fee)
account$btc_base <- account$btc_base*(1-rate_btc)
}
}
account$asset <- account$money_base + account$btc_base*DT_price[length(DT_price)]
account
Cl(DT.1d)
DT_price
DT
Cl(DT)
DT_price <- Cl(DT)
account <- list(start = start,
end = end,
money_base = money_base,
btc_base = btc_base)
DT <- DT.1d[paste(account$start,'/',account$end,sep='')]
DT_price <- Cl(DT)
ma5 <- runMean(DT[,4],n = 5)
ma10 <- runMean(DT[,4],n = 10)
policy <- rep(0,nrow(DT))
dif_5_10 <- ma5 - ma10
policy[dif_5_10 > 0] <- 1
policy[dif_5_10 < 0] <- -1
rate_money <- 0.5
rate_btc <- 0.5
fee <- 0.002
for(i in seq_len(length(policy))){
if(policy[i] == 1 & account$money_base > 0){
account$btc_base <- account$btc_base + account$money_base*rate_money/DT_price[i]*(1-fee)
account$money_base <- account$money_base*(1-rate_money)
}else if(policy[i] == -1 & account$btc_base > 0){
account$money_base <- account$money_base + account$btc_base*rate_btc*DT_price[i]*(1-fee)
account$btc_base <- account$btc_base*(1-rate_btc)
}
}
account$asset <- account$money_base + account$btc_base*DT_price[length(DT_price)]
account <- list(start = start,
end = end,
money_base = money_base,
btc_base = btc_base)
DT <- DT.1d[paste(account$start,'/',account$end,sep='')]
DT_price <- as.numeric(Cl(DT))
ma5 <- runMean(DT[,4],n = 5)
ma10 <- runMean(DT[,4],n = 10)
policy <- rep(0,nrow(DT))
dif_5_10 <- ma5 - ma10
policy[dif_5_10 > 0] <- 1
policy[dif_5_10 < 0] <- -1
rate_money <- 0.5
rate_btc <- 0.5
fee <- 0.002
for(i in seq_len(length(policy))){
if(policy[i] == 1 & account$money_base > 0){
account$btc_base <- account$btc_base + account$money_base*rate_money/DT_price[i]*(1-fee)
account$money_base <- account$money_base*(1-rate_money)
}else if(policy[i] == -1 & account$btc_base > 0){
account$money_base <- account$money_base + account$btc_base*rate_btc*DT_price[i]*(1-fee)
account$btc_base <- account$btc_base*(1-rate_btc)
}
}
account$asset <- account$money_base + account$btc_base*DT_price[length(DT_price)]
sessionInfo()
Sys.setenv(TZ = 'UTC')
currency('USD')
DT[1]
dvi <- DVI(Cl(DT))
head(DT)
DT
dvi <- DVI(Cl(DT[1:10]))
dvi <- DVI(Cl(DT[1:10,]))
?runSum
?DVI
dvi <- DVI(Cl(DT),n = 10)
dvi <- DVI(Cl(DT.1d))
head(dvi)
dvi
View(dvi)
sig <- Lag(ifelse(dvi$dvi < 0.5,1,-1))
ROC(Cl(DT))
?ROC
Cl(DT)
1073.65/1079
ROC(Cl(DT))
View(DT)
(1073.65-1079.00)/1079.00
sig
dvi <- DVI(Cl(DT.1d))
head(dvi)
getSymbols('GSPC')
require(PerformanceAnalytics)
table.Drawdowns(DT,top=10)
table.Drawdowns(Cl(DT),top=10)
?table.Drawdowns
Cl(DT)
table.Drawdowns(Cl(DT),top=10)
table.Drawdowns(Cl(DT))
table.Drawdowns(1:100)
table.Drawdowns(as.numeric(Cl(DT)))
as.numeric(Cl(DT))
table.Drawdowns(as.numeric(Cl(DT)))
table.Drawdowns(as.numeric(Cl(DT)),n = 10)
table.Drawdowns(as.numeric(Cl(DT)),top = 10)
dim(as.numeric(Cl(DT)))
dim(Cl(DT))
table.Drawdowns(Cl(DT),top = 10)
View(DT)
index(DT)
table.Drawdowns(DT,top = 10)
table.Drawdowns(DT[1:20,],top = 10)
