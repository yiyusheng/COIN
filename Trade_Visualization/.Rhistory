source('/Volumes/APPLE HDD/git/R_Function/photo_filter.R')
library("RSQLite")
install.packages('RSQLite')
con = dbConnect(drv="SQLite", dbname="/Users/york/Data/Trade_Visualization/btce.sqlite")
library("RSQLite")
con = dbConnect(drv="SQLite", dbname="/Users/york/Data/Trade_Visualization/btce.sqlite")
?dbConnect
con = dbConnect(RSQLite::SQLite(), dbname="/Users/york/Data/Trade_Visualization/btce.sqlite")
alltables = dbListTables(con)
p1 = dbGetQuery( con,'select * from btce_tradeHistory' )
View(p1)
View(p1)
source('/Volumes/APPLE HDD/git/Trade_Visualization/EDA-btce.R')
DT$amount[1]
View(DT)
DT$price[1]
summary(DT$price)
?dbGetQuery
View(DT)
sq = dbSendQuery(con,'select * from btce_tradeHistory' )
DT = dbFetch(sq)
a = 0.1239878196234587162398468126348176348
a
a == 0.1239878196234587162398468126348
a == 0.12398781962345871623984681263483
a == 0.12398781962345871623984681263483423423
r = dbGetQuery('desc btce_tradeHistory')
r = dbGetQuery(con,'desc btce_tradeHistory')
r = dbGetQuery(con,'desc btce_tradeHistory')
r = dbGetQuery(con,'show tables')
r = dbListFields(con,alltables)
r
sq = dbSendQuery(con,'select * from btce_tradeHistory' )
DT = Fetch(sq)
DT = fetch(sq)
?fetch
DT$pair <- factor(DT$pair)
DT$type <- factor(DT$type)
summary(DT)
table_pair_type <- melt(table(DT$type,DT$pair))
require('reshape2')
table_pair_type <- melt(table(DT$type,DT$pair))
View(table_pair_type)
names(table_pair_type) <- c('type','pair','count')
require('ggplot2')
ggplot(table_pair_type,aes(x = pair,y = count,fill = type)) + geom_bar(stat = 'identity')
DT$timestamp <- as.POSIXct.numeric(DT$timestamp,tz = 'UTC',origin = '1970-01-01')
pair = 'btc_usd'
gcsDT <- subset(DT,pair == pair)
gcsPair = 'btc_usd'
gcsDT <- subset(DT,gcsPair == pair)
View(gcsDT)
unique(gcsDT$price)
interval = 'minus'
gcsDT$time_interval <- round.POSIXt(gcsDT$timestamp,units = interval)
interval = 'mins'
gcsDT$time_interval <- round.POSIXt(gcsDT$timestamp,units = interval)
View(gcsDT)
gcsDT$time_interval <- factor(round.POSIXt(gcsDT$timestamp,units = interval))
df <- gcsDT
df$time_interval[1]
median(df$price)
df$price[1]
df$price[nrow(df)]
list(df$time_interval[1],
mean(df$price),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
a <- by(gcsDT,gcsDT$time_interval,function(df){
list(df$time_interval[1],
mean(df$price),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
dim(a)
a[1]
length(a)
length(unique(gscDT$time_interval))
length(unique(gcsDT$time_interval))
a <- by(gcsDT,gcsDT$time_interval,function(df){
data.frame(df$time_interval[1],
mean(df$price),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
a[1]
a <- by(gcsDT,factor(gcsDT$time_interval),function(df){
data.frame(df$time_interval[1],
mean(df$price),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
head(gcsDT$time_interval)
summary(gcsDT)
DT$timestamp <- as.POSIXct.numeric(DT$timestamp,origin = '1970-01-01')
sq = dbSendQuery(con,'select * from btce_tradeHistory' )
con = dbConnect(RSQLite::SQLite(), dbname="/Users/york/Data/Trade_Visualization/btce.sqlite")
alltables = dbListTables(con)
sq = dbSendQuery(con,'select * from btce_tradeHistory' )
DT = fetch(sq)
DT$pair <- factor(DT$pair)
DT$type <- factor(DT$type)
DT$timestamp <- as.POSIXct.numeric(DT$timestamp,origin = '1970-01-01')
summary(DT)
gcsDT <- subset(DT,gcsPair == pair)
gcsDT$time_interval <- round.POSIXt(gcsDT$timestamp,units = interval)
gcsDT$time_interval <- factor(round.POSIXt(gcsDT$timestamp,units = interval))
gcsDT$time_interval <- as.numeric(round.POSIXt(gcsDT$timestamp,units = interval))
a <- by(gcsDT,gcsDT$time_interval,function(df){
data.frame(df$time_interval[1],
mean(df$price),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
a <- by(gcsDT,gcsDT$time_interval,function(df){
list(df$time_interval[1],
mean(df$price),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
b <- data.frame(b)
b <- data.frame(a)
b <- list2df(a)
source('rhead')
source('~/rhead')
b <- list2df(a)
rm(list = ls())
setwd('~/Code/R/COIN/Trade_Visualization/')
source('~/rhead')
require('reshape2')
require('ggplot2')
source('~/Code/R/COIN/Trade_Visualization/EDA-btce.R')
interval = 'mins'
gscPair = 'btc_usd'
gcsDT <- subset(DT,pair == gcsPair)
gcsPair = 'btc_usd'
gcsDT <- subset(DT,pair == gcsPair)
gcsDT$time_interval <- as.numeric(round.POSIXt(gcsDT$timestamp,units = interval))
a <- by(gcsDT,gcsDT$time_interval,function(df){
list(df$time_interval[1],
mean(df$price),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
b <- list2df(a)
View(b)
sta <- list2df(by(gcsDT,gcsDT$time_interval,function(df){
list(mean(df$price),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
},n = c('mean','start','end','max','min','amount','ts'))
b <- list2df(a)
ggplot(gcsDT,aes(x = time_interval,y = ))
}
sta <- list2df(by(gcsDT,gcsDT$time_interval,function(df){
list(mean(df$price),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
}),n = c('mean','start','end','max','min','amount','ts'))
View(sta)
sta <- list2df(by(gcsDT,gcsDT$time_interval,function(df){
list(roundX(mean(df$price)),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
}),n = c('mean','start','end','max','min','amount','ts'))
sta$ts <- as.POSIXct.numeric(sta$ts,origin = '1970-01-01')
class(gcsDT)
names(gcsDT)
a <- data.framd(sta)
class(sta)
str(sta)
sta <- by(gcsDT,gcsDT$time_interval,function(df){
list(roundX(mean(df$price)),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
sta1 <- data.frame(matrix(unlist(sta,byrow = T,nrow = length(sta))))
sta <- by(gcsDT,gcsDT$time_interval,function(df){
list(roundX(mean(df$price)),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
sta1 <- data.frame(matrix(unlist(sta,byrow = T,nrow = length(sta))))
sta1 <- data.frame(matrix(unlist(sta),byrow = T,nrow = length(sta)))
View(sta1)
sta <- by(gcsDT,gcsDT$time_interval,function(df){
list(df$time_interval[1],
roundX(mean(df$price)),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
sta <- data.frame(matrix(unlist(sta),byrow = T,nrow = length(sta)))
names(sta) <- c('ts','mean','start','end','max','min','amount')
View(sta)
sta$ts <- as.POSIXct.numeric(sta$ts,origin = '1970-01-01')
?ggplot
ggplot(sta,aes(x = ts,y = amount)) + geom_bar(stat = 'identity')
sta <- by(gcsDT,gcsDT$time_interval,function(df){
list(df$time_interval[1],
roundX(mean(df$price)),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
sta <- data.frame(matrix(unlist(sta),byrow = T,nrow = length(sta)))
names(sta) <- c('ts','mean','open','close','max','min','amount')
sta$ts <- as.POSIXct.numeric(sta$ts,origin = '1970-01-01')
ggplot(sta,aes(x = ts)) + geom_boxplot(aes(ymin = min, ymax = max, middel = mean, lower = pmin(open,close), upper = pmax(open,close)))
ggplot(sta,aes(x = ts,group = 1)) + geom_boxplot(aes(ymin = min, ymax = max, middel = mean, lower = pmin(open,close), upper = pmax(open,close)))
ggplot(sta,aes(x = ts,group = 1)) +
geom_boxplot(aes(ymin = min, ymax = max, middel = mean, lower = pmin(open,close), upper = pmax(open,close)), stat = 'identity')
ggplot(sta,aes(x = ts,group = 1)) +
geom_boxplot(aes(ymin = min, ymax = max, middle = mean, lower = pmin(open,close), upper = pmax(open,close)), stat = 'identity')
getCutInterval <- function(timeS,timeE,interval){
seq.POSIXt(timeS,timeE,interval)
}
getCutInterval <- function(t,interval){
mint <- min(t)
maxt <- max(t)
seqt <- seq.POSIXt(mint,maxt,interval)
cut.POSIXt(t,seqt,seqt[-length(seqt)])
}
gcsDT$unitT <- getCutInterval(gcsDT$timestamp,300)
View(gcsDT)
getCutInterval <- function(t,interval){
mint <- round.POSIXt(min(t),'mins')
maxt <- round.POSIXt(max(t),'mins')
seqt <- seq.POSIXt(mint,maxt,interval)
cut.POSIXt(t,seqt,seqt[-length(seqt)])
}
gcsDT$unitT <- getCutInterval(gcsDT$timestamp,300)
gcsDT$unitT <- as.p(getCutInterval(gcsDT$timestamp,300))
summary(gcsDT)
getCutInterval <- function(t,interval){
mint <- round.POSIXt(min(t),'mins') - 60
maxt <- round.POSIXt(max(t),'mins') + 60
seqt <- seq.POSIXt(mint,maxt,interval)
cut.POSIXt(t,seqt,seqt[-length(seqt)])
}
gcsDT$unitT <- as.p(getCutInterval(gcsDT$timestamp,300))
summary(gcsDT)
sta <- by(gcsDT,gcsDT$time_interval,function(df){
list(df$time_interval[1],
roundX(mean(df$price)),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
sta <- data.frame(matrix(unlist(sta),byrow = T,nrow = length(sta)))
names(sta) <- c('ts','mean','open','close','max','min','amount')
sta$ts <- as.POSIXct.numeric(sta$ts,origin = '1970-01-01')
ggplot(sta,aes(x = ts,group = 1)) +
geom_boxplot(aes(ymin = min, ymax = max, middle = mean, lower = pmin(open,close), upper = pmax(open,close)), stat = 'identity')
sta <- by(gcsDT,gcsDT$unitT,function(df){
list(df$time_interval[1],
roundX(mean(df$price)),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
sta <- data.frame(matrix(unlist(sta),byrow = T,nrow = length(sta)))
names(sta) <- c('ts','mean','open','close','max','min','amount')
sta$ts <- as.POSIXct.numeric(sta$ts,origin = '1970-01-01')
ggplot(sta,aes(x = ts,group = 1)) +
geom_boxplot(aes(ymin = min, ymax = max, middle = mean, lower = pmin(open,close), upper = pmax(open,close)), stat = 'identity')
gcsDT$unitT <- as.p(getCutInterval(gcsDT$timestamp,3600))
sta <- by(gcsDT,gcsDT$unitT,function(df){
list(df$time_interval[1],
roundX(mean(df$price)),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
sta <- data.frame(matrix(unlist(sta),byrow = T,nrow = length(sta)))
names(sta) <- c('ts','mean','open','close','max','min','amount')
sta$ts <- as.POSIXct.numeric(sta$ts,origin = '1970-01-01')
ggplot(sta,aes(x = ts,group = 1)) +
geom_boxplot(aes(ymin = min, ymax = max, middle = mean, lower = pmin(open,close), upper = pmax(open,close)), stat = 'identity')
gcsDT <- subset(DT,pair == gcsPair)
gcsDT$unitT <- as.p(getCutInterval(gcsDT$timestamp,15*60))
sta <- by(gcsDT,gcsDT$unitT,function(df){
list(df$time_interval[1],
roundX(mean(df$price)),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
sta <- data.frame(matrix(unlist(sta),byrow = T,nrow = length(sta)))
names(sta) <- c('ts','mean','open','close','max','min','amount')
sta$ts <- as.POSIXct.numeric(sta$ts,origin = '1970-01-01')
gcsDT <- subset(DT,pair == gcsPair)
gcsDT$unitT <- as.p(getCutInterval(gcsDT$timestamp,15*60))
sta <- by(gcsDT,gcsDT$unitT,function(df){
list(df$time_interval[1],
roundX(mean(df$price)),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
sta <- data.frame(matrix(unlist(sta),byrow = T,nrow = length(sta)))
sta <- by(gcsDT,gcsDT$unitT,function(df){
list(df$unitT[1],
roundX(mean(df$price)),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
sta <- data.frame(matrix(unlist(sta),byrow = T,nrow = length(sta)))
names(sta) <- c('ts','mean','open','close','max','min','amount')
sta$ts <- as.POSIXct.numeric(sta$ts,origin = '1970-01-01')
ggplot(sta,aes(x = ts,group = 1)) +
geom_boxplot(aes(ymin = min, ymax = max, middle = mean, lower = pmin(open,close), upper = pmax(open,close)), stat = 'identity')
rm(list = ls())
setwd('~/Code/R/COIN/Trade_Visualization/')
source('~/rhead')
library("RSQLite")
con = dbConnect(RSQLite::SQLite(), dbname="/Users/york/Data/Trade_Visualization/btce.sqlite")
alltables = dbListTables(con)
DT = dbGetQuery(con,'select * from btce_tradeHistory' )
rm(list = ls())
setwd('~/Code/R/COIN/Trade_Visualization/')
source('~/rhead')
DT <- read.csv(file.path(dir_data,'btce.csv'))
names(DT) <- c('index','pair','type','price','tid','value','time')
View(DT)
table(DT$type)
DT[DT$type == '1',]
DT <- subsetX(DT,!is.na(index))
DT$time <- as.POSIXct.numeric(DT$timestamp,origin = '1970-01-01')
DT$time <- as.POSIXct.numeric(DT$time,origin = '1970-01-01')
summary(DT)
DT$time[1]
min(DT$time)
table_pair_type <- melt(table(DT$type,DT$pair))
names(table_pair_type) <- c('type','pair','count')
ggplot(table_pair_type,aes(x = pair,y = count,fill = type)) + geom_bar(stat = 'identity')
getCutInterval <- function(t,interval){
mint <- round.POSIXt(min(t),'mins') - 60
maxt <- round.POSIXt(max(t),'mins') + 60
seqt <- seq.POSIXt(mint,maxt,interval)
cut.POSIXt(t,seqt,seqt[-length(seqt)])
}
getCandleStick <- function(interval = 300,gcsPair = 'btc_usd'){
gcsDT <- subset(DT,pair == gcsPair)
gcsDT$unitT <- as.p(getCutInterval(gcsDT$timestamp,15*60))
sta <- by(gcsDT,gcsDT$unitT,function(df){
list(df$unitT[1],
roundX(mean(df$price)),
df$price[1],
df$price[nrow(df)],
max(df$price),
min(df$price),
sum(df$amount))
})
sta <- data.frame(matrix(unlist(sta),byrow = T,nrow = length(sta)))
names(sta) <- c('ts','mean','open','close','max','min','amount')
sta$ts <- as.POSIXct.numeric(sta$ts,origin = '1970-01-01')
ggplot(sta,aes(x = ts,group = 1)) +
geom_boxplot(aes(ymin = min, ymax = max, middle = mean, lower = pmin(open,close), upper = pmax(open,close)), stat = 'identity')
}
p <- getCandleStick()
source('~/Code/R/R_libs_user/photo_filter.R')
